# .github/workflows/release_build.yml
name: Release

on:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  BINARY_NAME: owl   # <- your binary name

permissions:
  contents: write  # required to create/update releases

jobs:
  build-linux:
    runs-on: ubuntu-latest
    container: messense/rust-musl-cross:x86_64-musl
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set version from config.toml
        shell: bash
        run: |
          VERSION="$(grep -E '^[[:space:]]*version[[:space:]]*=' config.toml | head -n1 | sed -E 's/.*=[[:space:]]*"([^"]+)".*/\1/')"
          if [ -z "$VERSION" ]; then
            echo "Failed to parse version from config.toml" >&2
            exit 1
          fi
          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV
          echo "::notice::Release version $VERSION"

      - run: rustup target add x86_64-unknown-linux-musl

      - name: Build (musl static)
        run: cargo build --release --target x86_64-unknown-linux-musl

      - name: Upload linux binary to release
        uses: Spikatrix/upload-release-action@b713c4b73f0a8ddda515820c124efc6538685492
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/x86_64-unknown-linux-musl/release/${{ env.BINARY_NAME }}
          asset_name: ${{ env.BINARY_NAME }}
          target_commit: ${{ github.sha }}
          tag: v${{ env.RELEASE_VERSION }}
          release_name: v${{ env.RELEASE_VERSION }}
          prerelease: false
          overwrite: true
          body: ${{ env.BINARY_NAME }} release
